# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import qxdm_pb2 as qxdm__pb2


class QXDMStub(object):
  """The QXDM service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Connect = channel.unary_unary(
        '/QXDM/Connect',
        request_serializer=qxdm__pb2.ConnectRequest.SerializeToString,
        response_deserializer=qxdm__pb2.ConnectResponse.FromString,
        )
    self.Disconnect = channel.unary_unary(
        '/QXDM/Disconnect',
        request_serializer=qxdm__pb2.DisconnectRequest.SerializeToString,
        response_deserializer=qxdm__pb2.DisconnectResponse.FromString,
        )
    self.StartLog = channel.unary_unary(
        '/QXDM/StartLog',
        request_serializer=qxdm__pb2.StartLogRequest.SerializeToString,
        response_deserializer=qxdm__pb2.StartLogResponse.FromString,
        )
    self.SaveLog = channel.unary_stream(
        '/QXDM/SaveLog',
        request_serializer=qxdm__pb2.SaveLogRequest.SerializeToString,
        response_deserializer=qxdm__pb2.SaveLogResponse.FromString,
        )


class QXDMServicer(object):
  """The QXDM service definition.
  """

  def Connect(self, request, context):
    """Connects a device to the QXDM process
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Disconnect(self, request, context):
    """Disconnects a device from the QXDM process
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartLog(self, request, context):
    """Start logging on a QXDM process  
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SaveLog(self, request, context):
    """Save logs on a QXDM process
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QXDMServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Connect': grpc.unary_unary_rpc_method_handler(
          servicer.Connect,
          request_deserializer=qxdm__pb2.ConnectRequest.FromString,
          response_serializer=qxdm__pb2.ConnectResponse.SerializeToString,
      ),
      'Disconnect': grpc.unary_unary_rpc_method_handler(
          servicer.Disconnect,
          request_deserializer=qxdm__pb2.DisconnectRequest.FromString,
          response_serializer=qxdm__pb2.DisconnectResponse.SerializeToString,
      ),
      'StartLog': grpc.unary_unary_rpc_method_handler(
          servicer.StartLog,
          request_deserializer=qxdm__pb2.StartLogRequest.FromString,
          response_serializer=qxdm__pb2.StartLogResponse.SerializeToString,
      ),
      'SaveLog': grpc.unary_stream_rpc_method_handler(
          servicer.SaveLog,
          request_deserializer=qxdm__pb2.SaveLogRequest.FromString,
          response_serializer=qxdm__pb2.SaveLogResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'QXDM', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
